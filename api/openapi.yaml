openapi: 3.0.1
info:
  title: Connect API
  version: v1
  x-swaggerexclude: External
servers:
- description: Production server
  url: https://api.trinsic.id
security:
- Bearer: []
paths:
  /api/v1/attachments/attachment:
    post:
      description: "Exchange an Attachment Access Key (from `IdentityData.Attachments`)\
        \ for the raw contents of the attachment.\r\n            \r\nUse this API\
        \ to fetch document (front, back, portrait) or other (selfie) images from\
        \ a verification, if relevant.\r\n            \r\nIn some cases, attachments\
        \ may not be immediately available after a verification is completed. If so,\
        \ this endpoint will return an HTTP 202 code, and you should try again later."
      operationId: GetAttachment
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/GetAttachmentRequest'
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/GetAttachmentRequest'
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/GetAttachmentRequest'
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ValidationResult'
                type: array
          description: Validation Failed
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailureMessage'
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      summary: Get Attachment
      tags:
      - Attachments
      x-content-type: application/json
      x-accepts:
      - application/json
  /api/v1/network/providers:
    get:
      description: List all identity providers available for use
      operationId: ListProviders
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ListProvidersResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ListProvidersResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ListProvidersResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ValidationResult'
                type: array
          description: Validation Failed
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailureMessage'
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      summary: List Identity Providers
      tags:
      - Network
      x-accepts:
      - application/json
      - text/json
      - text/plain
  /api/v1/network/identities/{phoneNumber}:
    get:
      description: Query the availability of an identity in the Trinsic Network by
        phone number
      operationId: IdentityLookup
      parameters:
      - explode: false
        in: path
        name: phoneNumber
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IdentityLookupResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityLookupResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/IdentityLookupResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ValidationResult'
                type: array
          description: Validation Failed
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailureMessage'
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      summary: Lookup Identity
      tags:
      - Network
      x-accepts:
      - application/json
      - text/json
      - text/plain
  /api/v1/sessions:
    get:
      description: List Sessions created by your account
      operationId: ListSessions
      parameters:
      - description: The field by which sessions should be ordered
        example: Created
        explode: true
        in: query
        name: OrderBy
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/SessionOrdering'
          example: Created
        style: form
      - example: Descending
        explode: true
        in: query
        name: OrderDirection
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/OrderDirection'
          example: Descending
        style: form
      - description: The number of items to return per page -- must be between `1`
          and `50`
        example: 50
        explode: true
        in: query
        name: PageSize
        required: false
        schema:
          example: 50
          format: int32
          maximum: 50
          minimum: 1
          type: integer
        style: form
      - description: The page number to return -- starts at `1`
        example: 1
        explode: true
        in: query
        name: Page
        required: false
        schema:
          example: 1
          format: int32
          maximum: 2147483647
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ListSessionsResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ListSessionsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ListSessionsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ValidationResult'
                type: array
          description: Validation Failed
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailureMessage'
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      summary: List Sessions
      tags:
      - Sessions
      x-accepts:
      - application/json
      - text/json
      - text/plain
    post:
      description: Create a Session to verify a user's identity
      operationId: CreateSession
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateSessionRequest'
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateSessionRequest'
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateSessionRequest'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CreateSessionResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSessionResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CreateSessionResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ValidationResult'
                type: array
          description: Validation Failed
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailureMessage'
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      summary: Create Session
      tags:
      - Sessions
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
      - text/plain
  /api/v1/sessions/{sessionId}:
    get:
      description: Get a Session by its ID
      operationId: GetSession
      parameters:
      - explode: false
        in: path
        name: sessionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GetSessionResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/GetSessionResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/GetSessionResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ValidationResult'
                type: array
          description: Validation Failed
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailureMessage'
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      summary: Get Session
      tags:
      - Sessions
      x-accepts:
      - application/json
      - text/json
      - text/plain
  /api/v1/sessions/{sessionId}/results:
    post:
      operationId: GetSessionResult
      parameters:
      - explode: false
        in: path
        name: sessionId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/GetSessionResultRequest'
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/GetSessionResultRequest'
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/GetSessionResultRequest'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GetSessionResultResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/GetSessionResultResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/GetSessionResultResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ValidationResult'
                type: array
          description: Validation Failed
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailureMessage'
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      summary: Get Session Results
      tags:
      - Sessions
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
      - text/plain
  /api/v1/sessions/{sessionId}/cancel:
    post:
      description: Cancel a Session by its ID
      operationId: CancelSession
      parameters:
      - explode: false
        in: path
        name: sessionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CancelSessionResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CancelSessionResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CancelSessionResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ValidationResult'
                type: array
          description: Validation Failed
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailureMessage'
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      summary: Cancel Session
      tags:
      - Sessions
      x-accepts:
      - application/json
      - text/json
      - text/plain
  /api/v1/sessions/{sessionId}/redact:
    post:
      description: "Redact a Session, removing all identity data from Trinsic's servers.\r\
        \n            \r\nIdentity data that a user has chosen to save in their passkey-protected\
        \ wallet will not be deleted."
      operationId: RedactSession
      parameters:
      - explode: false
        in: path
        name: sessionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ValidationResult'
                type: array
          description: Validation Failed
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailureMessage'
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      summary: Redact Session
      tags:
      - Sessions
      x-accepts:
      - application/json
components:
  schemas:
    Address:
      additionalProperties: false
      description: Address information for an individual
      properties:
        line1:
          type: string
        line2:
          type: string
        line3:
          type: string
        city:
          type: string
        state:
          type: string
        postalCode:
          type: string
        country:
          type: string
        fullAddress:
          description: The full address as a single string
          type: string
      type: object
    Attachments:
      additionalProperties: false
      description: Attachment Access Keys for attachments (eg document / selfie images)
      properties:
        selfie:
          description: Key to access the selfie image (if relevant) for this verification
          type: string
        documentFront:
          description: Key to access the document front image (if relevant) for this
            verification
          type: string
        documentBack:
          description: Key to access the document back image (if relevant) for this
            verification
          type: string
        documentPortrait:
          description: "Key to access the document portrait image (if relevant and\
            \ available) for this verification.\r\n            \r\nSpecifically, this\
            \ is a cropped version of the document front image which includes only\
            \ the portrait on the document."
          type: string
      type: object
    CancelSessionResponse:
      additionalProperties: false
      example:
        session: ""
      properties:
        session:
          allOf:
          - $ref: '#/components/schemas/Session'
      required:
      - session
      type: object
    CreateSessionRequest:
      example:
        launchMethodDirectly: true
        providers:
        - providers
        - providers
        disclosedFields: ""
      properties:
        launchMethodDirectly:
          description: "Whether to immediately launch the identity provider, without\
            \ invoking the Trinsic Connect Widget UI.\r\n            \r\nUsers will\
            \ not be shown the Connect Widget; therefore, reuse of Connect credentials,\
            \ selection of an identity provider, and saving a verification for future\
            \ reuse\r\nare not available to the end user in this mode.\r\n       \
            \     \r\nSessions created with this option enabled must be created with\
            \ a `RedirectUrl` specified, and cannot be invoked using the frontend\
            \ SDK at this time."
          type: boolean
        providers:
          description: "The list of allowed identity providers. If not specified,\
            \ all available providers will be allowed.\r\n            \r\nIf `LaunchMethodDirectly`\
            \ is `true`, this field must be set, and must have only a single entry.\r\
            \nIf `LaunchMethodDirectly` is not specified or is `false`, this field\
            \ may have any number of entries."
          items:
            type: string
          type: array
        disclosedFields:
          allOf:
          - $ref: '#/components/schemas/DisclosedFieldsRequest'
          description: "Specific identity attributes to request. If not provided,\
            \ all available attributes will be requested."
      type: object
    CreateSessionResponse:
      example:
        session: ""
        launchUrl: https://api.trinsic.id/api/session/launch?clientToken=...
      properties:
        session:
          allOf:
          - $ref: '#/components/schemas/Session'
          description: The created Acceptance Session
        launchUrl:
          description: "The URL that should be used to invoke the Acceptance Session\
            \ on your user's device.\r\n            \r\nIf the Session was created\
            \ with `LaunchMethodDirectly` set to `true`, you should redirect your\
            \ user's browser to this URL. The frontend SDK cannot presently be used\
            \ to\r\ninvoke these Sessions.\r\n            \r\nOtherwise, you should\
            \ pass this URL to your user's frontend and use the frontend SDK to invoke\
            \ the Session.\r\n            \r\nThis URL is sensitive and as such can\
            \ only be obtained once. If you need to obtain it again, you will need\
            \ to create a new Acceptance Session."
          example: https://api.trinsic.id/api/session/launch?clientToken=...
          type: string
      required:
      - session
      type: object
    DisclosedFields:
      additionalProperties: false
      properties:
        idNumber:
          type: boolean
        givenName:
          type: boolean
        familyName:
          type: boolean
        address:
          type: boolean
        dateOfBirth:
          type: boolean
        country:
          type: boolean
        issueDate:
          type: boolean
        expirationDate:
          type: boolean
        documentFront:
          type: boolean
        documentBack:
          type: boolean
        documentPortrait:
          type: boolean
        selfie:
          type: boolean
      required:
      - address
      - country
      - dateOfBirth
      - documentBack
      - documentFront
      - documentPortrait
      - expirationDate
      - familyName
      - givenName
      - idNumber
      - issueDate
      - selfie
      type: object
    DisclosedFieldsRequest:
      additionalProperties: false
      properties:
        idNumber:
          type: boolean
        givenName:
          type: boolean
        familyName:
          type: boolean
        address:
          type: boolean
        dateOfBirth:
          type: boolean
        country:
          type: boolean
        issueDate:
          type: boolean
        expirationDate:
          type: boolean
        documentFront:
          type: boolean
        documentBack:
          type: boolean
        documentPortrait:
          type: boolean
        selfie:
          type: boolean
      type: object
    DocumentData:
      additionalProperties: false
      properties:
        type:
          type: string
        number:
          type: string
        issueDate:
          type: string
        expirationDate:
          type: string
        issuingCountry:
          type: string
        issuingAuthority:
          type: string
      type: object
    FailureMessage:
      additionalProperties: false
      example:
        message: message
      properties:
        message:
          type: string
      required:
      - message
      type: object
    GetAttachmentRequest:
      additionalProperties: false
      example:
        attachmentAccessKey: attachmentAccessKey
      properties:
        attachmentAccessKey:
          description: The Attachment Access Key to exchange for the raw file contents
            of the related Attachment
          minLength: 1
          type: string
      required:
      - attachmentAccessKey
      type: object
    GetSessionResponse:
      additionalProperties: false
      example:
        session: ""
      properties:
        session:
          allOf:
          - $ref: '#/components/schemas/Session'
      required:
      - session
      type: object
    GetSessionResultRequest:
      additionalProperties: false
      example:
        resultsAccessKey: resultsAccessKey
      properties:
        resultsAccessKey:
          description: The Results Access Key to exchange
          type: string
      required:
      - resultsAccessKey
      type: object
    GetSessionResultResponse:
      additionalProperties: false
      example:
        session: ""
        identityData: ""
      properties:
        session:
          allOf:
          - $ref: '#/components/schemas/Session'
        identityData:
          allOf:
          - $ref: '#/components/schemas/IdentityData'
      required:
      - session
      type: object
    IdentityData:
      additionalProperties: false
      properties:
        originatingProviderId:
          description: "The ID of the integration from which this data originated\
            \ (eg \"yoti\", \"clear\")"
          type: string
        person:
          allOf:
          - $ref: '#/components/schemas/PersonData'
          description: Identity data of the individual who was verified
        document:
          allOf:
          - $ref: '#/components/schemas/DocumentData'
          description: "Identity data of the document involved in verification, if\
            \ relevant"
        attachments:
          allOf:
          - $ref: '#/components/schemas/Attachments'
          description: Access keys for attachments (eg document/selfie images)
      type: object
    IdentityLookupResponse:
      additionalProperties: false
      example:
        identityInNetwork: true
      properties:
        identityInNetwork:
          description: Whether the given phone number is known to have an identity
            in the network.
          type: boolean
      required:
      - identityInNetwork
      type: object
    ListProvidersResponse:
      additionalProperties: false
      example:
        providers:
        - name: Yoti | CLEAR | ...
          id: yoti | clear | ...
          logoUrl: logoUrl
        - name: Yoti | CLEAR | ...
          id: yoti | clear | ...
          logoUrl: logoUrl
      properties:
        providers:
          description: The list of identity providers available to your account
          items:
            $ref: '#/components/schemas/ProviderInfo'
          type: array
      required:
      - providers
      type: object
    ListSessionsResponse:
      additionalProperties: false
      example:
        sessions:
        - created: 1722526411
          failCode: ""
          id: 678c1ff6-2178-49e7-81d2-548afb6f85ec
          state: ""
          updated: 1722526722
          verification: ""
          disclosedFields: ""
        - created: 1722526411
          failCode: ""
          id: 678c1ff6-2178-49e7-81d2-548afb6f85ec
          state: ""
          updated: 1722526722
          verification: ""
          disclosedFields: ""
        total: 101
        more: true
      properties:
        sessions:
          items:
            $ref: '#/components/schemas/Session'
          type: array
        total:
          description: The total number of sessions tied to your account
          example: 101
          format: int32
          type: integer
        more:
          description: Whether there are additional pages of sessions to retrieve
          example: true
          type: boolean
      required:
      - more
      - sessions
      - total
      type: object
    OrderDirection:
      enum:
      - Ascending
      - Descending
      type: string
    PersonData:
      additionalProperties: false
      description: Identity information for the individual being verified
      properties:
        givenName:
          description: Given (first) name of the individual
          example: John
          type: string
        familyName:
          description: Family (last) name of the individual
          example: Doe
          type: string
        middleName:
          description: Middle name of the individual
          example: Jacob
          type: string
        fullName:
          description: "The individual's full name as a single string.\r\n       \
            \     \r\nUseful for names which do not fit into a \"first middle last\"\
            \ structure."
          example: John Jacob de Doe
          type: string
        nationality:
          type: string
        gender:
          type: string
        phoneNumber:
          type: string
        address:
          allOf:
          - $ref: '#/components/schemas/Address'
          description: Address information for an individual
        dateOfBirth:
          type: string
      type: object
    ProviderInfo:
      additionalProperties: false
      description: A provider that can be specified when creating a `Session`
      example:
        name: Yoti | CLEAR | ...
        id: yoti | clear | ...
        logoUrl: logoUrl
      properties:
        id:
          description: The ID of the provider
          example: yoti | clear | ...
          type: string
        name:
          description: "The friendly, human-readable name of the provider"
          example: Yoti | CLEAR | ...
          type: string
        logoUrl:
          description: A URL pointing to the provider's logo
          type: string
      required:
      - id
      - logoUrl
      - name
      type: object
    Session:
      additionalProperties: false
      example:
        created: 1722526411
        failCode: ""
        id: 678c1ff6-2178-49e7-81d2-548afb6f85ec
        state: ""
        updated: 1722526722
        verification: ""
        disclosedFields: ""
      properties:
        id:
          example: 678c1ff6-2178-49e7-81d2-548afb6f85ec
          type: string
        state:
          allOf:
          - $ref: '#/components/schemas/SessionState'
          description: The state of the session
        failCode:
          allOf:
          - $ref: '#/components/schemas/SessionFailCode'
          description: "If the session is in state `IdvFailed`, this field contains\
            \ the reason for failure."
        verification:
          allOf:
          - $ref: '#/components/schemas/Verification'
          description: The underlying verification for this Session
        disclosedFields:
          allOf:
          - $ref: '#/components/schemas/DisclosedFields'
          description: The fields that were requested to be disclosed when the Session
            was created
        created:
          description: "The unix timestamp, in seconds, when this session was created"
          example: 1722526411
          format: int64
          type: integer
        updated:
          description: "The unix timestamp, in seconds, when this session's state\
            \ last changed"
          example: 1722526722
          format: int64
          type: integer
      required:
      - created
      - disclosedFields
      - id
      - state
      - updated
      - verification
      type: object
    SessionFailCode:
      enum:
      - SessionFailNone
      - SessionFailInternal
      - SessionFailVerificationFailed
      - SessionFailAuthentication
      - SessionFailExpired
      - SessionFailUserCanceled
      - SessionFailRpCanceled
      type: string
    SessionOrdering:
      enum:
      - Created
      - Updated
      - State
      type: string
    SessionState:
      enum:
      - IdvCreated
      - IdvInitiated
      - IdvAuthenticating
      - IdvInProgress
      - IdvSuccess
      - IdvFailed
      type: string
    ValidationResult:
      additionalProperties: false
      example:
        memberNames:
        - memberNames
        - memberNames
        errorMessage: errorMessage
      properties:
        memberNames:
          items:
            type: string
          readOnly: true
          type: array
        errorMessage:
          type: string
      required:
      - memberNames
      type: object
    Verification:
      additionalProperties: false
      description: A Verification contained within a Session
      properties:
        provider:
          description: "The identity provider that was used to perform the Verification,\
            \ if any"
          type: string
        failCode:
          allOf:
          - $ref: '#/components/schemas/VerificationFailCode'
          description: "If the Verification is in state `VerificationFailed`, this\
            \ field contains the reason for failure"
      type: object
    VerificationFailCode:
      enum:
      - VerificationFailNone
      - VerificationFailInternal
      - VerificationFailInvalidImage
      - VerificationFailInauthentic
      - VerificationFailUnsupportedDocument
      type: string
  securitySchemes:
    Bearer:
      description: Trinsic Connect API Key
      scheme: bearer
      type: http

