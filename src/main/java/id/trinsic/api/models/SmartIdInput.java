/*
 * Trinsic API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package id.trinsic.api.models;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import id.trinsic.ApiClient;
/**
 * SmartIdInput
 */
@JsonPropertyOrder({
  SmartIdInput.JSON_PROPERTY_SMART_ID_DOCUMENT_NUMBER,
  SmartIdInput.JSON_PROPERTY_SMART_ID_NUMBER
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-05T13:48:03.792198397Z[Etc/UTC]", comments = "Generator version: 7.13.0")
public class SmartIdInput {
  public static final String JSON_PROPERTY_SMART_ID_DOCUMENT_NUMBER = "smartIdDocumentNumber";
  private JsonNullable<String> smartIdDocumentNumber = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SMART_ID_NUMBER = "smartIdNumber";
  private JsonNullable<String> smartIdNumber = JsonNullable.<String>undefined();

  public SmartIdInput() { 
  }

  public SmartIdInput smartIdDocumentNumber(@javax.annotation.Nullable String smartIdDocumentNumber) {
    this.smartIdDocumentNumber = JsonNullable.<String>of(smartIdDocumentNumber);
    return this;
  }

  /**
   * The user&#39;s Smart ID Document Number
   * @return smartIdDocumentNumber
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  @JsonIgnore
  public String getSmartIdDocumentNumber() {
        return smartIdDocumentNumber.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SMART_ID_DOCUMENT_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSmartIdDocumentNumber_JsonNullable() {
    return smartIdDocumentNumber;
  }
  
  @JsonProperty(JSON_PROPERTY_SMART_ID_DOCUMENT_NUMBER)
  public void setSmartIdDocumentNumber_JsonNullable(JsonNullable<String> smartIdDocumentNumber) {
    this.smartIdDocumentNumber = smartIdDocumentNumber;
  }

  public void setSmartIdDocumentNumber(@javax.annotation.Nullable String smartIdDocumentNumber) {
    this.smartIdDocumentNumber = JsonNullable.<String>of(smartIdDocumentNumber);
  }


  public SmartIdInput smartIdNumber(@javax.annotation.Nullable String smartIdNumber) {
    this.smartIdNumber = JsonNullable.<String>of(smartIdNumber);
    return this;
  }

  /**
   * The user&#39;s Smart ID ETSI number or document number.
   * @return smartIdNumber
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getSmartIdNumber() {
        return smartIdNumber.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SMART_ID_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSmartIdNumber_JsonNullable() {
    return smartIdNumber;
  }
  
  @JsonProperty(JSON_PROPERTY_SMART_ID_NUMBER)
  public void setSmartIdNumber_JsonNullable(JsonNullable<String> smartIdNumber) {
    this.smartIdNumber = smartIdNumber;
  }

  public void setSmartIdNumber(@javax.annotation.Nullable String smartIdNumber) {
    this.smartIdNumber = JsonNullable.<String>of(smartIdNumber);
  }


  /**
   * Return true if this SmartIdInput object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SmartIdInput smartIdInput = (SmartIdInput) o;
    return equalsNullable(this.smartIdDocumentNumber, smartIdInput.smartIdDocumentNumber) &&
        equalsNullable(this.smartIdNumber, smartIdInput.smartIdNumber);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(smartIdDocumentNumber), hashCodeNullable(smartIdNumber));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SmartIdInput {\n");
    sb.append("    smartIdDocumentNumber: ").append(toIndentedString(smartIdDocumentNumber)).append("\n");
    sb.append("    smartIdNumber: ").append(toIndentedString(smartIdNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `smartIdDocumentNumber` to the URL query string
    if (getSmartIdDocumentNumber() != null) {
      joiner.add(String.format("%ssmartIdDocumentNumber%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getSmartIdDocumentNumber()))));
    }

    // add `smartIdNumber` to the URL query string
    if (getSmartIdNumber() != null) {
      joiner.add(String.format("%ssmartIdNumber%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getSmartIdNumber()))));
    }

    return joiner.toString();
  }
}

