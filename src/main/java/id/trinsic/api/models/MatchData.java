/*
 * Trinsic API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package id.trinsic.api.models;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import id.trinsic.api.models.Match;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import id.trinsic.ApiClient;
/**
 * MatchData
 */
@JsonPropertyOrder({
  MatchData.JSON_PROPERTY_NATIONAL_ID_NUMBER,
  MatchData.JSON_PROPERTY_FULL_NAME,
  MatchData.JSON_PROPERTY_GIVEN_NAME,
  MatchData.JSON_PROPERTY_MIDDLE_NAME,
  MatchData.JSON_PROPERTY_FAMILY_NAME,
  MatchData.JSON_PROPERTY_SEX,
  MatchData.JSON_PROPERTY_DATE_OF_BIRTH,
  MatchData.JSON_PROPERTY_FACE_MATCH,
  MatchData.JSON_PROPERTY_LIVENESS,
  MatchData.JSON_PROPERTY_IMAGE_AUTHENTICITY
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-20T14:00:36.523251123Z[Etc/UTC]", comments = "Generator version: 7.13.0")
public class MatchData {
  public static final String JSON_PROPERTY_NATIONAL_ID_NUMBER = "nationalIdNumber";
  private JsonNullable<Match> nationalIdNumber = JsonNullable.<Match>undefined();

  public static final String JSON_PROPERTY_FULL_NAME = "fullName";
  private JsonNullable<Match> fullName = JsonNullable.<Match>undefined();

  public static final String JSON_PROPERTY_GIVEN_NAME = "givenName";
  private JsonNullable<Match> givenName = JsonNullable.<Match>undefined();

  public static final String JSON_PROPERTY_MIDDLE_NAME = "middleName";
  private JsonNullable<Match> middleName = JsonNullable.<Match>undefined();

  public static final String JSON_PROPERTY_FAMILY_NAME = "familyName";
  private JsonNullable<Match> familyName = JsonNullable.<Match>undefined();

  public static final String JSON_PROPERTY_SEX = "sex";
  private JsonNullable<Match> sex = JsonNullable.<Match>undefined();

  public static final String JSON_PROPERTY_DATE_OF_BIRTH = "dateOfBirth";
  private JsonNullable<Match> dateOfBirth = JsonNullable.<Match>undefined();

  public static final String JSON_PROPERTY_FACE_MATCH = "faceMatch";
  private JsonNullable<Match> faceMatch = JsonNullable.<Match>undefined();

  public static final String JSON_PROPERTY_LIVENESS = "liveness";
  private JsonNullable<Match> liveness = JsonNullable.<Match>undefined();

  public static final String JSON_PROPERTY_IMAGE_AUTHENTICITY = "imageAuthenticity";
  private JsonNullable<Match> imageAuthenticity = JsonNullable.<Match>undefined();

  public MatchData() { 
  }

  public MatchData nationalIdNumber(@javax.annotation.Nullable Match nationalIdNumber) {
    this.nationalIdNumber = JsonNullable.<Match>of(nationalIdNumber);
    return this;
  }

  /**
   * Get nationalIdNumber
   * @return nationalIdNumber
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Match getNationalIdNumber() {
        return nationalIdNumber.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NATIONAL_ID_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Match> getNationalIdNumber_JsonNullable() {
    return nationalIdNumber;
  }
  
  @JsonProperty(JSON_PROPERTY_NATIONAL_ID_NUMBER)
  public void setNationalIdNumber_JsonNullable(JsonNullable<Match> nationalIdNumber) {
    this.nationalIdNumber = nationalIdNumber;
  }

  public void setNationalIdNumber(@javax.annotation.Nullable Match nationalIdNumber) {
    this.nationalIdNumber = JsonNullable.<Match>of(nationalIdNumber);
  }


  public MatchData fullName(@javax.annotation.Nullable Match fullName) {
    this.fullName = JsonNullable.<Match>of(fullName);
    return this;
  }

  /**
   * Get fullName
   * @return fullName
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Match getFullName() {
        return fullName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FULL_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Match> getFullName_JsonNullable() {
    return fullName;
  }
  
  @JsonProperty(JSON_PROPERTY_FULL_NAME)
  public void setFullName_JsonNullable(JsonNullable<Match> fullName) {
    this.fullName = fullName;
  }

  public void setFullName(@javax.annotation.Nullable Match fullName) {
    this.fullName = JsonNullable.<Match>of(fullName);
  }


  public MatchData givenName(@javax.annotation.Nullable Match givenName) {
    this.givenName = JsonNullable.<Match>of(givenName);
    return this;
  }

  /**
   * Get givenName
   * @return givenName
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Match getGivenName() {
        return givenName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_GIVEN_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Match> getGivenName_JsonNullable() {
    return givenName;
  }
  
  @JsonProperty(JSON_PROPERTY_GIVEN_NAME)
  public void setGivenName_JsonNullable(JsonNullable<Match> givenName) {
    this.givenName = givenName;
  }

  public void setGivenName(@javax.annotation.Nullable Match givenName) {
    this.givenName = JsonNullable.<Match>of(givenName);
  }


  public MatchData middleName(@javax.annotation.Nullable Match middleName) {
    this.middleName = JsonNullable.<Match>of(middleName);
    return this;
  }

  /**
   * Get middleName
   * @return middleName
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Match getMiddleName() {
        return middleName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MIDDLE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Match> getMiddleName_JsonNullable() {
    return middleName;
  }
  
  @JsonProperty(JSON_PROPERTY_MIDDLE_NAME)
  public void setMiddleName_JsonNullable(JsonNullable<Match> middleName) {
    this.middleName = middleName;
  }

  public void setMiddleName(@javax.annotation.Nullable Match middleName) {
    this.middleName = JsonNullable.<Match>of(middleName);
  }


  public MatchData familyName(@javax.annotation.Nullable Match familyName) {
    this.familyName = JsonNullable.<Match>of(familyName);
    return this;
  }

  /**
   * Get familyName
   * @return familyName
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Match getFamilyName() {
        return familyName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FAMILY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Match> getFamilyName_JsonNullable() {
    return familyName;
  }
  
  @JsonProperty(JSON_PROPERTY_FAMILY_NAME)
  public void setFamilyName_JsonNullable(JsonNullable<Match> familyName) {
    this.familyName = familyName;
  }

  public void setFamilyName(@javax.annotation.Nullable Match familyName) {
    this.familyName = JsonNullable.<Match>of(familyName);
  }


  public MatchData sex(@javax.annotation.Nullable Match sex) {
    this.sex = JsonNullable.<Match>of(sex);
    return this;
  }

  /**
   * Get sex
   * @return sex
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Match getSex() {
        return sex.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Match> getSex_JsonNullable() {
    return sex;
  }
  
  @JsonProperty(JSON_PROPERTY_SEX)
  public void setSex_JsonNullable(JsonNullable<Match> sex) {
    this.sex = sex;
  }

  public void setSex(@javax.annotation.Nullable Match sex) {
    this.sex = JsonNullable.<Match>of(sex);
  }


  public MatchData dateOfBirth(@javax.annotation.Nullable Match dateOfBirth) {
    this.dateOfBirth = JsonNullable.<Match>of(dateOfBirth);
    return this;
  }

  /**
   * Get dateOfBirth
   * @return dateOfBirth
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Match getDateOfBirth() {
        return dateOfBirth.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DATE_OF_BIRTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Match> getDateOfBirth_JsonNullable() {
    return dateOfBirth;
  }
  
  @JsonProperty(JSON_PROPERTY_DATE_OF_BIRTH)
  public void setDateOfBirth_JsonNullable(JsonNullable<Match> dateOfBirth) {
    this.dateOfBirth = dateOfBirth;
  }

  public void setDateOfBirth(@javax.annotation.Nullable Match dateOfBirth) {
    this.dateOfBirth = JsonNullable.<Match>of(dateOfBirth);
  }


  public MatchData faceMatch(@javax.annotation.Nullable Match faceMatch) {
    this.faceMatch = JsonNullable.<Match>of(faceMatch);
    return this;
  }

  /**
   * Get faceMatch
   * @return faceMatch
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Match getFaceMatch() {
        return faceMatch.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FACE_MATCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Match> getFaceMatch_JsonNullable() {
    return faceMatch;
  }
  
  @JsonProperty(JSON_PROPERTY_FACE_MATCH)
  public void setFaceMatch_JsonNullable(JsonNullable<Match> faceMatch) {
    this.faceMatch = faceMatch;
  }

  public void setFaceMatch(@javax.annotation.Nullable Match faceMatch) {
    this.faceMatch = JsonNullable.<Match>of(faceMatch);
  }


  public MatchData liveness(@javax.annotation.Nullable Match liveness) {
    this.liveness = JsonNullable.<Match>of(liveness);
    return this;
  }

  /**
   * Get liveness
   * @return liveness
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Match getLiveness() {
        return liveness.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LIVENESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Match> getLiveness_JsonNullable() {
    return liveness;
  }
  
  @JsonProperty(JSON_PROPERTY_LIVENESS)
  public void setLiveness_JsonNullable(JsonNullable<Match> liveness) {
    this.liveness = liveness;
  }

  public void setLiveness(@javax.annotation.Nullable Match liveness) {
    this.liveness = JsonNullable.<Match>of(liveness);
  }


  public MatchData imageAuthenticity(@javax.annotation.Nullable Match imageAuthenticity) {
    this.imageAuthenticity = JsonNullable.<Match>of(imageAuthenticity);
    return this;
  }

  /**
   * Get imageAuthenticity
   * @return imageAuthenticity
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Match getImageAuthenticity() {
        return imageAuthenticity.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IMAGE_AUTHENTICITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Match> getImageAuthenticity_JsonNullable() {
    return imageAuthenticity;
  }
  
  @JsonProperty(JSON_PROPERTY_IMAGE_AUTHENTICITY)
  public void setImageAuthenticity_JsonNullable(JsonNullable<Match> imageAuthenticity) {
    this.imageAuthenticity = imageAuthenticity;
  }

  public void setImageAuthenticity(@javax.annotation.Nullable Match imageAuthenticity) {
    this.imageAuthenticity = JsonNullable.<Match>of(imageAuthenticity);
  }


  /**
   * Return true if this MatchData object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MatchData matchData = (MatchData) o;
    return equalsNullable(this.nationalIdNumber, matchData.nationalIdNumber) &&
        equalsNullable(this.fullName, matchData.fullName) &&
        equalsNullable(this.givenName, matchData.givenName) &&
        equalsNullable(this.middleName, matchData.middleName) &&
        equalsNullable(this.familyName, matchData.familyName) &&
        equalsNullable(this.sex, matchData.sex) &&
        equalsNullable(this.dateOfBirth, matchData.dateOfBirth) &&
        equalsNullable(this.faceMatch, matchData.faceMatch) &&
        equalsNullable(this.liveness, matchData.liveness) &&
        equalsNullable(this.imageAuthenticity, matchData.imageAuthenticity);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(nationalIdNumber), hashCodeNullable(fullName), hashCodeNullable(givenName), hashCodeNullable(middleName), hashCodeNullable(familyName), hashCodeNullable(sex), hashCodeNullable(dateOfBirth), hashCodeNullable(faceMatch), hashCodeNullable(liveness), hashCodeNullable(imageAuthenticity));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MatchData {\n");
    sb.append("    nationalIdNumber: ").append(toIndentedString(nationalIdNumber)).append("\n");
    sb.append("    fullName: ").append(toIndentedString(fullName)).append("\n");
    sb.append("    givenName: ").append(toIndentedString(givenName)).append("\n");
    sb.append("    middleName: ").append(toIndentedString(middleName)).append("\n");
    sb.append("    familyName: ").append(toIndentedString(familyName)).append("\n");
    sb.append("    sex: ").append(toIndentedString(sex)).append("\n");
    sb.append("    dateOfBirth: ").append(toIndentedString(dateOfBirth)).append("\n");
    sb.append("    faceMatch: ").append(toIndentedString(faceMatch)).append("\n");
    sb.append("    liveness: ").append(toIndentedString(liveness)).append("\n");
    sb.append("    imageAuthenticity: ").append(toIndentedString(imageAuthenticity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `nationalIdNumber` to the URL query string
    if (getNationalIdNumber() != null) {
      joiner.add(getNationalIdNumber().toUrlQueryString(prefix + "nationalIdNumber" + suffix));
    }

    // add `fullName` to the URL query string
    if (getFullName() != null) {
      joiner.add(getFullName().toUrlQueryString(prefix + "fullName" + suffix));
    }

    // add `givenName` to the URL query string
    if (getGivenName() != null) {
      joiner.add(getGivenName().toUrlQueryString(prefix + "givenName" + suffix));
    }

    // add `middleName` to the URL query string
    if (getMiddleName() != null) {
      joiner.add(getMiddleName().toUrlQueryString(prefix + "middleName" + suffix));
    }

    // add `familyName` to the URL query string
    if (getFamilyName() != null) {
      joiner.add(getFamilyName().toUrlQueryString(prefix + "familyName" + suffix));
    }

    // add `sex` to the URL query string
    if (getSex() != null) {
      joiner.add(getSex().toUrlQueryString(prefix + "sex" + suffix));
    }

    // add `dateOfBirth` to the URL query string
    if (getDateOfBirth() != null) {
      joiner.add(getDateOfBirth().toUrlQueryString(prefix + "dateOfBirth" + suffix));
    }

    // add `faceMatch` to the URL query string
    if (getFaceMatch() != null) {
      joiner.add(getFaceMatch().toUrlQueryString(prefix + "faceMatch" + suffix));
    }

    // add `liveness` to the URL query string
    if (getLiveness() != null) {
      joiner.add(getLiveness().toUrlQueryString(prefix + "liveness" + suffix));
    }

    // add `imageAuthenticity` to the URL query string
    if (getImageAuthenticity() != null) {
      joiner.add(getImageAuthenticity().toUrlQueryString(prefix + "imageAuthenticity" + suffix));
    }

    return joiner.toString();
  }
}

