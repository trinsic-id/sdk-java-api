/*
 * Trinsic API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package id.trinsic.api.models;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import id.trinsic.api.models.Language;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import id.trinsic.ApiClient;
/**
 * MobileIdInput
 */
@JsonPropertyOrder({
  MobileIdInput.JSON_PROPERTY_MOBILE_ID_PHONE_NUMBER,
  MobileIdInput.JSON_PROPERTY_MOBILE_ID_NATIONAL_IDENTITY_NUMBER,
  MobileIdInput.JSON_PROPERTY_MOBILE_ID_LANGUAGE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-05-22T03:15:48.156257273Z[Etc/UTC]", comments = "Generator version: 7.13.0")
public class MobileIdInput {
  public static final String JSON_PROPERTY_MOBILE_ID_PHONE_NUMBER = "mobileIdPhoneNumber";
  private JsonNullable<String> mobileIdPhoneNumber = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MOBILE_ID_NATIONAL_IDENTITY_NUMBER = "mobileIdNationalIdentityNumber";
  private JsonNullable<String> mobileIdNationalIdentityNumber = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MOBILE_ID_LANGUAGE = "mobileIdLanguage";
  private JsonNullable<Language> mobileIdLanguage = JsonNullable.<Language>undefined();

  public MobileIdInput() { 
  }

  public MobileIdInput mobileIdPhoneNumber(@javax.annotation.Nullable String mobileIdPhoneNumber) {
    this.mobileIdPhoneNumber = JsonNullable.<String>of(mobileIdPhoneNumber);
    return this;
  }

  /**
   * The user&#39;s phone number in E.164 format
   * @return mobileIdPhoneNumber
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getMobileIdPhoneNumber() {
        return mobileIdPhoneNumber.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MOBILE_ID_PHONE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMobileIdPhoneNumber_JsonNullable() {
    return mobileIdPhoneNumber;
  }
  
  @JsonProperty(JSON_PROPERTY_MOBILE_ID_PHONE_NUMBER)
  public void setMobileIdPhoneNumber_JsonNullable(JsonNullable<String> mobileIdPhoneNumber) {
    this.mobileIdPhoneNumber = mobileIdPhoneNumber;
  }

  public void setMobileIdPhoneNumber(@javax.annotation.Nullable String mobileIdPhoneNumber) {
    this.mobileIdPhoneNumber = JsonNullable.<String>of(mobileIdPhoneNumber);
  }


  public MobileIdInput mobileIdNationalIdentityNumber(@javax.annotation.Nullable String mobileIdNationalIdentityNumber) {
    this.mobileIdNationalIdentityNumber = JsonNullable.<String>of(mobileIdNationalIdentityNumber);
    return this;
  }

  /**
   * The user&#39;s National ID number
   * @return mobileIdNationalIdentityNumber
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getMobileIdNationalIdentityNumber() {
        return mobileIdNationalIdentityNumber.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MOBILE_ID_NATIONAL_IDENTITY_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMobileIdNationalIdentityNumber_JsonNullable() {
    return mobileIdNationalIdentityNumber;
  }
  
  @JsonProperty(JSON_PROPERTY_MOBILE_ID_NATIONAL_IDENTITY_NUMBER)
  public void setMobileIdNationalIdentityNumber_JsonNullable(JsonNullable<String> mobileIdNationalIdentityNumber) {
    this.mobileIdNationalIdentityNumber = mobileIdNationalIdentityNumber;
  }

  public void setMobileIdNationalIdentityNumber(@javax.annotation.Nullable String mobileIdNationalIdentityNumber) {
    this.mobileIdNationalIdentityNumber = JsonNullable.<String>of(mobileIdNationalIdentityNumber);
  }


  public MobileIdInput mobileIdLanguage(@javax.annotation.Nullable Language mobileIdLanguage) {
    this.mobileIdLanguage = JsonNullable.<Language>of(mobileIdLanguage);
    return this;
  }

  /**
   * The user&#39;s language -- LIT, EST, ENG, or RUS
   * @return mobileIdLanguage
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Language getMobileIdLanguage() {
        return mobileIdLanguage.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MOBILE_ID_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Language> getMobileIdLanguage_JsonNullable() {
    return mobileIdLanguage;
  }
  
  @JsonProperty(JSON_PROPERTY_MOBILE_ID_LANGUAGE)
  public void setMobileIdLanguage_JsonNullable(JsonNullable<Language> mobileIdLanguage) {
    this.mobileIdLanguage = mobileIdLanguage;
  }

  public void setMobileIdLanguage(@javax.annotation.Nullable Language mobileIdLanguage) {
    this.mobileIdLanguage = JsonNullable.<Language>of(mobileIdLanguage);
  }


  /**
   * Return true if this MobileIdInput object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MobileIdInput mobileIdInput = (MobileIdInput) o;
    return equalsNullable(this.mobileIdPhoneNumber, mobileIdInput.mobileIdPhoneNumber) &&
        equalsNullable(this.mobileIdNationalIdentityNumber, mobileIdInput.mobileIdNationalIdentityNumber) &&
        equalsNullable(this.mobileIdLanguage, mobileIdInput.mobileIdLanguage);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(mobileIdPhoneNumber), hashCodeNullable(mobileIdNationalIdentityNumber), hashCodeNullable(mobileIdLanguage));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MobileIdInput {\n");
    sb.append("    mobileIdPhoneNumber: ").append(toIndentedString(mobileIdPhoneNumber)).append("\n");
    sb.append("    mobileIdNationalIdentityNumber: ").append(toIndentedString(mobileIdNationalIdentityNumber)).append("\n");
    sb.append("    mobileIdLanguage: ").append(toIndentedString(mobileIdLanguage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `mobileIdPhoneNumber` to the URL query string
    if (getMobileIdPhoneNumber() != null) {
      joiner.add(String.format("%smobileIdPhoneNumber%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getMobileIdPhoneNumber()))));
    }

    // add `mobileIdNationalIdentityNumber` to the URL query string
    if (getMobileIdNationalIdentityNumber() != null) {
      joiner.add(String.format("%smobileIdNationalIdentityNumber%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getMobileIdNationalIdentityNumber()))));
    }

    // add `mobileIdLanguage` to the URL query string
    if (getMobileIdLanguage() != null) {
      joiner.add(String.format("%smobileIdLanguage%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getMobileIdLanguage()))));
    }

    return joiner.toString();
  }
}

