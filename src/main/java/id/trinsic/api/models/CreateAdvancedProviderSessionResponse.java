/*
 * Trinsic API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package id.trinsic.api.models;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import id.trinsic.api.models.IntegrationStep;
import id.trinsic.api.models.ResultCollection;
import java.util.Arrays;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import id.trinsic.ApiClient;
/**
 * CreateAdvancedProviderSessionResponse
 */
@JsonPropertyOrder({
  CreateAdvancedProviderSessionResponse.JSON_PROPERTY_SESSION_ID,
  CreateAdvancedProviderSessionResponse.JSON_PROPERTY_RESULT_COLLECTION,
  CreateAdvancedProviderSessionResponse.JSON_PROPERTY_NEXT_STEP
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-01T18:44:32.211018983Z[Etc/UTC]", comments = "Generator version: 7.13.0")
public class CreateAdvancedProviderSessionResponse {
  public static final String JSON_PROPERTY_SESSION_ID = "sessionId";
  @javax.annotation.Nonnull
  private UUID sessionId;

  public static final String JSON_PROPERTY_RESULT_COLLECTION = "resultCollection";
  @javax.annotation.Nonnull
  private ResultCollection resultCollection;

  public static final String JSON_PROPERTY_NEXT_STEP = "nextStep";
  @javax.annotation.Nonnull
  private IntegrationStep nextStep;

  public CreateAdvancedProviderSessionResponse() { 
  }

  public CreateAdvancedProviderSessionResponse sessionId(@javax.annotation.Nonnull UUID sessionId) {
    this.sessionId = sessionId;
    return this;
  }

  /**
   * The ID of the newly-created Acceptance Session
   * @return sessionId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SESSION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public UUID getSessionId() {
    return sessionId;
  }


  @JsonProperty(JSON_PROPERTY_SESSION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSessionId(@javax.annotation.Nonnull UUID sessionId) {
    this.sessionId = sessionId;
  }


  public CreateAdvancedProviderSessionResponse resultCollection(@javax.annotation.Nonnull ResultCollection resultCollection) {
    this.resultCollection = resultCollection;
    return this;
  }

  /**
   * The method by which you must collect the results of the Acceptance Session.
   * @return resultCollection
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_RESULT_COLLECTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public ResultCollection getResultCollection() {
    return resultCollection;
  }


  @JsonProperty(JSON_PROPERTY_RESULT_COLLECTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setResultCollection(@javax.annotation.Nonnull ResultCollection resultCollection) {
    this.resultCollection = resultCollection;
  }


  public CreateAdvancedProviderSessionResponse nextStep(@javax.annotation.Nonnull IntegrationStep nextStep) {
    this.nextStep = nextStep;
    return this;
  }

  /**
   * The next step you must take to launch the user into the integration
   * @return nextStep
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NEXT_STEP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public IntegrationStep getNextStep() {
    return nextStep;
  }


  @JsonProperty(JSON_PROPERTY_NEXT_STEP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNextStep(@javax.annotation.Nonnull IntegrationStep nextStep) {
    this.nextStep = nextStep;
  }


  /**
   * Return true if this CreateAdvancedProviderSessionResponse object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateAdvancedProviderSessionResponse createAdvancedProviderSessionResponse = (CreateAdvancedProviderSessionResponse) o;
    return Objects.equals(this.sessionId, createAdvancedProviderSessionResponse.sessionId) &&
        Objects.equals(this.resultCollection, createAdvancedProviderSessionResponse.resultCollection) &&
        Objects.equals(this.nextStep, createAdvancedProviderSessionResponse.nextStep);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sessionId, resultCollection, nextStep);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateAdvancedProviderSessionResponse {\n");
    sb.append("    sessionId: ").append(toIndentedString(sessionId)).append("\n");
    sb.append("    resultCollection: ").append(toIndentedString(resultCollection)).append("\n");
    sb.append("    nextStep: ").append(toIndentedString(nextStep)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `sessionId` to the URL query string
    if (getSessionId() != null) {
      joiner.add(String.format("%ssessionId%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getSessionId()))));
    }

    // add `resultCollection` to the URL query string
    if (getResultCollection() != null) {
      joiner.add(getResultCollection().toUrlQueryString(prefix + "resultCollection" + suffix));
    }

    // add `nextStep` to the URL query string
    if (getNextStep() != null) {
      joiner.add(getNextStep().toUrlQueryString(prefix + "nextStep" + suffix));
    }

    return joiner.toString();
  }
}

