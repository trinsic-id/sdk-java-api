/*
 * Trinsic API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package id.trinsic.api.models;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.LocalDate;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import id.trinsic.ApiClient;
/**
 * BangladeshNationalIdInput
 */
@JsonPropertyOrder({
  BangladeshNationalIdInput.JSON_PROPERTY_NATIONAL_ID_NUMBER,
  BangladeshNationalIdInput.JSON_PROPERTY_DATE_OF_BIRTH,
  BangladeshNationalIdInput.JSON_PROPERTY_NAME,
  BangladeshNationalIdInput.JSON_PROPERTY_PHOTO_BASE64
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-05-06T22:37:43.647894878Z[Etc/UTC]", comments = "Generator version: 7.13.0")
public class BangladeshNationalIdInput {
  public static final String JSON_PROPERTY_NATIONAL_ID_NUMBER = "nationalIdNumber";
  private JsonNullable<String> nationalIdNumber = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DATE_OF_BIRTH = "dateOfBirth";
  private JsonNullable<LocalDate> dateOfBirth = JsonNullable.<LocalDate>undefined();

  public static final String JSON_PROPERTY_NAME = "name";
  private JsonNullable<String> name = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PHOTO_BASE64 = "photoBase64";
  private JsonNullable<String> photoBase64 = JsonNullable.<String>undefined();

  public BangladeshNationalIdInput() { 
  }

  public BangladeshNationalIdInput nationalIdNumber(@javax.annotation.Nullable String nationalIdNumber) {
    this.nationalIdNumber = JsonNullable.<String>of(nationalIdNumber);
    return this;
  }

  /**
   * The user&#39;s Bangladesh National ID number.
   * @return nationalIdNumber
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getNationalIdNumber() {
        return nationalIdNumber.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NATIONAL_ID_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNationalIdNumber_JsonNullable() {
    return nationalIdNumber;
  }
  
  @JsonProperty(JSON_PROPERTY_NATIONAL_ID_NUMBER)
  public void setNationalIdNumber_JsonNullable(JsonNullable<String> nationalIdNumber) {
    this.nationalIdNumber = nationalIdNumber;
  }

  public void setNationalIdNumber(@javax.annotation.Nullable String nationalIdNumber) {
    this.nationalIdNumber = JsonNullable.<String>of(nationalIdNumber);
  }


  public BangladeshNationalIdInput dateOfBirth(@javax.annotation.Nullable LocalDate dateOfBirth) {
    this.dateOfBirth = JsonNullable.<LocalDate>of(dateOfBirth);
    return this;
  }

  /**
   * The user&#39;s date of birth, in &#x60;YYYY-MM-DD&#x60; format
   * @return dateOfBirth
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public LocalDate getDateOfBirth() {
        return dateOfBirth.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DATE_OF_BIRTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LocalDate> getDateOfBirth_JsonNullable() {
    return dateOfBirth;
  }
  
  @JsonProperty(JSON_PROPERTY_DATE_OF_BIRTH)
  public void setDateOfBirth_JsonNullable(JsonNullable<LocalDate> dateOfBirth) {
    this.dateOfBirth = dateOfBirth;
  }

  public void setDateOfBirth(@javax.annotation.Nullable LocalDate dateOfBirth) {
    this.dateOfBirth = JsonNullable.<LocalDate>of(dateOfBirth);
  }


  public BangladeshNationalIdInput name(@javax.annotation.Nullable String name) {
    this.name = JsonNullable.<String>of(name);
    return this;
  }

  /**
   * The user&#39;s full name
   * @return name
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getName() {
        return name.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getName_JsonNullable() {
    return name;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME)
  public void setName_JsonNullable(JsonNullable<String> name) {
    this.name = name;
  }

  public void setName(@javax.annotation.Nullable String name) {
    this.name = JsonNullable.<String>of(name);
  }


  public BangladeshNationalIdInput photoBase64(@javax.annotation.Nullable String photoBase64) {
    this.photoBase64 = JsonNullable.<String>of(photoBase64);
    return this;
  }

  /**
   * The base64-encoded bytes of the photo collected from the user
   * @return photoBase64
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getPhotoBase64() {
        return photoBase64.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PHOTO_BASE64)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPhotoBase64_JsonNullable() {
    return photoBase64;
  }
  
  @JsonProperty(JSON_PROPERTY_PHOTO_BASE64)
  public void setPhotoBase64_JsonNullable(JsonNullable<String> photoBase64) {
    this.photoBase64 = photoBase64;
  }

  public void setPhotoBase64(@javax.annotation.Nullable String photoBase64) {
    this.photoBase64 = JsonNullable.<String>of(photoBase64);
  }


  /**
   * Return true if this BangladeshNationalIdInput object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BangladeshNationalIdInput bangladeshNationalIdInput = (BangladeshNationalIdInput) o;
    return equalsNullable(this.nationalIdNumber, bangladeshNationalIdInput.nationalIdNumber) &&
        equalsNullable(this.dateOfBirth, bangladeshNationalIdInput.dateOfBirth) &&
        equalsNullable(this.name, bangladeshNationalIdInput.name) &&
        equalsNullable(this.photoBase64, bangladeshNationalIdInput.photoBase64);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(nationalIdNumber), hashCodeNullable(dateOfBirth), hashCodeNullable(name), hashCodeNullable(photoBase64));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BangladeshNationalIdInput {\n");
    sb.append("    nationalIdNumber: ").append(toIndentedString(nationalIdNumber)).append("\n");
    sb.append("    dateOfBirth: ").append(toIndentedString(dateOfBirth)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    photoBase64: ").append(toIndentedString(photoBase64)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `nationalIdNumber` to the URL query string
    if (getNationalIdNumber() != null) {
      joiner.add(String.format("%snationalIdNumber%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getNationalIdNumber()))));
    }

    // add `dateOfBirth` to the URL query string
    if (getDateOfBirth() != null) {
      joiner.add(String.format("%sdateOfBirth%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getDateOfBirth()))));
    }

    // add `name` to the URL query string
    if (getName() != null) {
      joiner.add(String.format("%sname%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getName()))));
    }

    // add `photoBase64` to the URL query string
    if (getPhotoBase64() != null) {
      joiner.add(String.format("%sphotoBase64%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getPhotoBase64()))));
    }

    return joiner.toString();
  }
}

