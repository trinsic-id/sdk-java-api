/*
 * Trinsic API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package id.trinsic.api.models;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import id.trinsic.api.models.DocumentType;
import java.time.LocalDate;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import id.trinsic.ApiClient;
/**
 * DocumentData
 */
@JsonPropertyOrder({
  DocumentData.JSON_PROPERTY_TYPE,
  DocumentData.JSON_PROPERTY_NUMBER,
  DocumentData.JSON_PROPERTY_ISSUE_DATE,
  DocumentData.JSON_PROPERTY_EXPIRATION_DATE,
  DocumentData.JSON_PROPERTY_ISSUING_COUNTRY,
  DocumentData.JSON_PROPERTY_ISSUING_AUTHORITY
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-05-06T22:37:43.647894878Z[Etc/UTC]", comments = "Generator version: 7.13.0")
public class DocumentData {
  public static final String JSON_PROPERTY_TYPE = "type";
  private JsonNullable<DocumentType> type = JsonNullable.<DocumentType>undefined();

  public static final String JSON_PROPERTY_NUMBER = "number";
  private JsonNullable<String> number = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ISSUE_DATE = "issueDate";
  private JsonNullable<LocalDate> issueDate = JsonNullable.<LocalDate>undefined();

  public static final String JSON_PROPERTY_EXPIRATION_DATE = "expirationDate";
  private JsonNullable<LocalDate> expirationDate = JsonNullable.<LocalDate>undefined();

  public static final String JSON_PROPERTY_ISSUING_COUNTRY = "issuingCountry";
  private JsonNullable<String> issuingCountry = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ISSUING_AUTHORITY = "issuingAuthority";
  private JsonNullable<String> issuingAuthority = JsonNullable.<String>undefined();

  public DocumentData() { 
  }

  public DocumentData type(@javax.annotation.Nullable DocumentType type) {
    this.type = JsonNullable.<DocumentType>of(type);
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public DocumentType getType() {
        return type.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<DocumentType> getType_JsonNullable() {
    return type;
  }
  
  @JsonProperty(JSON_PROPERTY_TYPE)
  public void setType_JsonNullable(JsonNullable<DocumentType> type) {
    this.type = type;
  }

  public void setType(@javax.annotation.Nullable DocumentType type) {
    this.type = JsonNullable.<DocumentType>of(type);
  }


  public DocumentData number(@javax.annotation.Nullable String number) {
    this.number = JsonNullable.<String>of(number);
    return this;
  }

  /**
   * Get number
   * @return number
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getNumber() {
        return number.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNumber_JsonNullable() {
    return number;
  }
  
  @JsonProperty(JSON_PROPERTY_NUMBER)
  public void setNumber_JsonNullable(JsonNullable<String> number) {
    this.number = number;
  }

  public void setNumber(@javax.annotation.Nullable String number) {
    this.number = JsonNullable.<String>of(number);
  }


  public DocumentData issueDate(@javax.annotation.Nullable LocalDate issueDate) {
    this.issueDate = JsonNullable.<LocalDate>of(issueDate);
    return this;
  }

  /**
   * Get issueDate
   * @return issueDate
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public LocalDate getIssueDate() {
        return issueDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ISSUE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LocalDate> getIssueDate_JsonNullable() {
    return issueDate;
  }
  
  @JsonProperty(JSON_PROPERTY_ISSUE_DATE)
  public void setIssueDate_JsonNullable(JsonNullable<LocalDate> issueDate) {
    this.issueDate = issueDate;
  }

  public void setIssueDate(@javax.annotation.Nullable LocalDate issueDate) {
    this.issueDate = JsonNullable.<LocalDate>of(issueDate);
  }


  public DocumentData expirationDate(@javax.annotation.Nullable LocalDate expirationDate) {
    this.expirationDate = JsonNullable.<LocalDate>of(expirationDate);
    return this;
  }

  /**
   * Get expirationDate
   * @return expirationDate
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public LocalDate getExpirationDate() {
        return expirationDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EXPIRATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LocalDate> getExpirationDate_JsonNullable() {
    return expirationDate;
  }
  
  @JsonProperty(JSON_PROPERTY_EXPIRATION_DATE)
  public void setExpirationDate_JsonNullable(JsonNullable<LocalDate> expirationDate) {
    this.expirationDate = expirationDate;
  }

  public void setExpirationDate(@javax.annotation.Nullable LocalDate expirationDate) {
    this.expirationDate = JsonNullable.<LocalDate>of(expirationDate);
  }


  public DocumentData issuingCountry(@javax.annotation.Nullable String issuingCountry) {
    this.issuingCountry = JsonNullable.<String>of(issuingCountry);
    return this;
  }

  /**
   * Get issuingCountry
   * @return issuingCountry
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getIssuingCountry() {
        return issuingCountry.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ISSUING_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIssuingCountry_JsonNullable() {
    return issuingCountry;
  }
  
  @JsonProperty(JSON_PROPERTY_ISSUING_COUNTRY)
  public void setIssuingCountry_JsonNullable(JsonNullable<String> issuingCountry) {
    this.issuingCountry = issuingCountry;
  }

  public void setIssuingCountry(@javax.annotation.Nullable String issuingCountry) {
    this.issuingCountry = JsonNullable.<String>of(issuingCountry);
  }


  public DocumentData issuingAuthority(@javax.annotation.Nullable String issuingAuthority) {
    this.issuingAuthority = JsonNullable.<String>of(issuingAuthority);
    return this;
  }

  /**
   * Get issuingAuthority
   * @return issuingAuthority
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getIssuingAuthority() {
        return issuingAuthority.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ISSUING_AUTHORITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIssuingAuthority_JsonNullable() {
    return issuingAuthority;
  }
  
  @JsonProperty(JSON_PROPERTY_ISSUING_AUTHORITY)
  public void setIssuingAuthority_JsonNullable(JsonNullable<String> issuingAuthority) {
    this.issuingAuthority = issuingAuthority;
  }

  public void setIssuingAuthority(@javax.annotation.Nullable String issuingAuthority) {
    this.issuingAuthority = JsonNullable.<String>of(issuingAuthority);
  }


  /**
   * Return true if this DocumentData object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DocumentData documentData = (DocumentData) o;
    return equalsNullable(this.type, documentData.type) &&
        equalsNullable(this.number, documentData.number) &&
        equalsNullable(this.issueDate, documentData.issueDate) &&
        equalsNullable(this.expirationDate, documentData.expirationDate) &&
        equalsNullable(this.issuingCountry, documentData.issuingCountry) &&
        equalsNullable(this.issuingAuthority, documentData.issuingAuthority);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(type), hashCodeNullable(number), hashCodeNullable(issueDate), hashCodeNullable(expirationDate), hashCodeNullable(issuingCountry), hashCodeNullable(issuingAuthority));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DocumentData {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    issueDate: ").append(toIndentedString(issueDate)).append("\n");
    sb.append("    expirationDate: ").append(toIndentedString(expirationDate)).append("\n");
    sb.append("    issuingCountry: ").append(toIndentedString(issuingCountry)).append("\n");
    sb.append("    issuingAuthority: ").append(toIndentedString(issuingAuthority)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `type` to the URL query string
    if (getType() != null) {
      joiner.add(String.format("%stype%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getType()))));
    }

    // add `number` to the URL query string
    if (getNumber() != null) {
      joiner.add(String.format("%snumber%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getNumber()))));
    }

    // add `issueDate` to the URL query string
    if (getIssueDate() != null) {
      joiner.add(String.format("%sissueDate%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getIssueDate()))));
    }

    // add `expirationDate` to the URL query string
    if (getExpirationDate() != null) {
      joiner.add(String.format("%sexpirationDate%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getExpirationDate()))));
    }

    // add `issuingCountry` to the URL query string
    if (getIssuingCountry() != null) {
      joiner.add(String.format("%sissuingCountry%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getIssuingCountry()))));
    }

    // add `issuingAuthority` to the URL query string
    if (getIssuingAuthority() != null) {
      joiner.add(String.format("%sissuingAuthority%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getIssuingAuthority()))));
    }

    return joiner.toString();
  }
}

