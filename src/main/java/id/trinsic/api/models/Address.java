/*
 * Trinsic API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package id.trinsic.api.models;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import id.trinsic.ApiClient;
/**
 * Address
 */
@JsonPropertyOrder({
  Address.JSON_PROPERTY_LINE1,
  Address.JSON_PROPERTY_LINE2,
  Address.JSON_PROPERTY_LINE3,
  Address.JSON_PROPERTY_CITY,
  Address.JSON_PROPERTY_SUBDIVISION,
  Address.JSON_PROPERTY_POSTAL_CODE,
  Address.JSON_PROPERTY_COUNTRY,
  Address.JSON_PROPERTY_FULL_ADDRESS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-05-22T03:19:23.819872077Z[Etc/UTC]", comments = "Generator version: 7.13.0")
public class Address {
  public static final String JSON_PROPERTY_LINE1 = "line1";
  private JsonNullable<String> line1 = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LINE2 = "line2";
  private JsonNullable<String> line2 = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LINE3 = "line3";
  private JsonNullable<String> line3 = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CITY = "city";
  private JsonNullable<String> city = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SUBDIVISION = "subdivision";
  private JsonNullable<String> subdivision = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_POSTAL_CODE = "postalCode";
  private JsonNullable<String> postalCode = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_COUNTRY = "country";
  private JsonNullable<String> country = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_FULL_ADDRESS = "fullAddress";
  private JsonNullable<String> fullAddress = JsonNullable.<String>undefined();

  public Address() { 
  }

  public Address line1(@javax.annotation.Nullable String line1) {
    this.line1 = JsonNullable.<String>of(line1);
    return this;
  }

  /**
   * Get line1
   * @return line1
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getLine1() {
        return line1.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LINE1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLine1_JsonNullable() {
    return line1;
  }
  
  @JsonProperty(JSON_PROPERTY_LINE1)
  public void setLine1_JsonNullable(JsonNullable<String> line1) {
    this.line1 = line1;
  }

  public void setLine1(@javax.annotation.Nullable String line1) {
    this.line1 = JsonNullable.<String>of(line1);
  }


  public Address line2(@javax.annotation.Nullable String line2) {
    this.line2 = JsonNullable.<String>of(line2);
    return this;
  }

  /**
   * Get line2
   * @return line2
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getLine2() {
        return line2.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LINE2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLine2_JsonNullable() {
    return line2;
  }
  
  @JsonProperty(JSON_PROPERTY_LINE2)
  public void setLine2_JsonNullable(JsonNullable<String> line2) {
    this.line2 = line2;
  }

  public void setLine2(@javax.annotation.Nullable String line2) {
    this.line2 = JsonNullable.<String>of(line2);
  }


  public Address line3(@javax.annotation.Nullable String line3) {
    this.line3 = JsonNullable.<String>of(line3);
    return this;
  }

  /**
   * Get line3
   * @return line3
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getLine3() {
        return line3.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LINE3)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLine3_JsonNullable() {
    return line3;
  }
  
  @JsonProperty(JSON_PROPERTY_LINE3)
  public void setLine3_JsonNullable(JsonNullable<String> line3) {
    this.line3 = line3;
  }

  public void setLine3(@javax.annotation.Nullable String line3) {
    this.line3 = JsonNullable.<String>of(line3);
  }


  public Address city(@javax.annotation.Nullable String city) {
    this.city = JsonNullable.<String>of(city);
    return this;
  }

  /**
   * Get city
   * @return city
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getCity() {
        return city.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCity_JsonNullable() {
    return city;
  }
  
  @JsonProperty(JSON_PROPERTY_CITY)
  public void setCity_JsonNullable(JsonNullable<String> city) {
    this.city = city;
  }

  public void setCity(@javax.annotation.Nullable String city) {
    this.city = JsonNullable.<String>of(city);
  }


  public Address subdivision(@javax.annotation.Nullable String subdivision) {
    this.subdivision = JsonNullable.<String>of(subdivision);
    return this;
  }

  /**
   * Get subdivision
   * @return subdivision
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getSubdivision() {
        return subdivision.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SUBDIVISION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSubdivision_JsonNullable() {
    return subdivision;
  }
  
  @JsonProperty(JSON_PROPERTY_SUBDIVISION)
  public void setSubdivision_JsonNullable(JsonNullable<String> subdivision) {
    this.subdivision = subdivision;
  }

  public void setSubdivision(@javax.annotation.Nullable String subdivision) {
    this.subdivision = JsonNullable.<String>of(subdivision);
  }


  public Address postalCode(@javax.annotation.Nullable String postalCode) {
    this.postalCode = JsonNullable.<String>of(postalCode);
    return this;
  }

  /**
   * Get postalCode
   * @return postalCode
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getPostalCode() {
        return postalCode.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_POSTAL_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPostalCode_JsonNullable() {
    return postalCode;
  }
  
  @JsonProperty(JSON_PROPERTY_POSTAL_CODE)
  public void setPostalCode_JsonNullable(JsonNullable<String> postalCode) {
    this.postalCode = postalCode;
  }

  public void setPostalCode(@javax.annotation.Nullable String postalCode) {
    this.postalCode = JsonNullable.<String>of(postalCode);
  }


  public Address country(@javax.annotation.Nullable String country) {
    this.country = JsonNullable.<String>of(country);
    return this;
  }

  /**
   * Get country
   * @return country
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getCountry() {
        return country.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCountry_JsonNullable() {
    return country;
  }
  
  @JsonProperty(JSON_PROPERTY_COUNTRY)
  public void setCountry_JsonNullable(JsonNullable<String> country) {
    this.country = country;
  }

  public void setCountry(@javax.annotation.Nullable String country) {
    this.country = JsonNullable.<String>of(country);
  }


  public Address fullAddress(@javax.annotation.Nullable String fullAddress) {
    this.fullAddress = JsonNullable.<String>of(fullAddress);
    return this;
  }

  /**
   * Get fullAddress
   * @return fullAddress
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getFullAddress() {
        return fullAddress.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FULL_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFullAddress_JsonNullable() {
    return fullAddress;
  }
  
  @JsonProperty(JSON_PROPERTY_FULL_ADDRESS)
  public void setFullAddress_JsonNullable(JsonNullable<String> fullAddress) {
    this.fullAddress = fullAddress;
  }

  public void setFullAddress(@javax.annotation.Nullable String fullAddress) {
    this.fullAddress = JsonNullable.<String>of(fullAddress);
  }


  /**
   * Return true if this Address object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Address address = (Address) o;
    return equalsNullable(this.line1, address.line1) &&
        equalsNullable(this.line2, address.line2) &&
        equalsNullable(this.line3, address.line3) &&
        equalsNullable(this.city, address.city) &&
        equalsNullable(this.subdivision, address.subdivision) &&
        equalsNullable(this.postalCode, address.postalCode) &&
        equalsNullable(this.country, address.country) &&
        equalsNullable(this.fullAddress, address.fullAddress);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(line1), hashCodeNullable(line2), hashCodeNullable(line3), hashCodeNullable(city), hashCodeNullable(subdivision), hashCodeNullable(postalCode), hashCodeNullable(country), hashCodeNullable(fullAddress));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Address {\n");
    sb.append("    line1: ").append(toIndentedString(line1)).append("\n");
    sb.append("    line2: ").append(toIndentedString(line2)).append("\n");
    sb.append("    line3: ").append(toIndentedString(line3)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    subdivision: ").append(toIndentedString(subdivision)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    fullAddress: ").append(toIndentedString(fullAddress)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `line1` to the URL query string
    if (getLine1() != null) {
      joiner.add(String.format("%sline1%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getLine1()))));
    }

    // add `line2` to the URL query string
    if (getLine2() != null) {
      joiner.add(String.format("%sline2%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getLine2()))));
    }

    // add `line3` to the URL query string
    if (getLine3() != null) {
      joiner.add(String.format("%sline3%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getLine3()))));
    }

    // add `city` to the URL query string
    if (getCity() != null) {
      joiner.add(String.format("%scity%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getCity()))));
    }

    // add `subdivision` to the URL query string
    if (getSubdivision() != null) {
      joiner.add(String.format("%ssubdivision%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getSubdivision()))));
    }

    // add `postalCode` to the URL query string
    if (getPostalCode() != null) {
      joiner.add(String.format("%spostalCode%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getPostalCode()))));
    }

    // add `country` to the URL query string
    if (getCountry() != null) {
      joiner.add(String.format("%scountry%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getCountry()))));
    }

    // add `fullAddress` to the URL query string
    if (getFullAddress() != null) {
      joiner.add(String.format("%sfullAddress%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getFullAddress()))));
    }

    return joiner.toString();
  }
}

