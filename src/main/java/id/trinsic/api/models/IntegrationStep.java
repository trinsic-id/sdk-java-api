/*
 * Trinsic API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package id.trinsic.api.models;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import id.trinsic.api.models.IntegrationLaunchMethod;
import id.trinsic.api.models.StepRefreshInfo;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import id.trinsic.ApiClient;
/**
 * A step to perform in the process of executing an Advanced Provider Session
 */
@JsonPropertyOrder({
  IntegrationStep.JSON_PROPERTY_METHOD,
  IntegrationStep.JSON_PROPERTY_CONTENT,
  IntegrationStep.JSON_PROPERTY_REFRESH
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-01T19:33:26.347436485Z[Etc/UTC]", comments = "Generator version: 7.13.0")
public class IntegrationStep {
  public static final String JSON_PROPERTY_METHOD = "method";
  @javax.annotation.Nonnull
  private IntegrationLaunchMethod method;

  public static final String JSON_PROPERTY_CONTENT = "content";
  @javax.annotation.Nonnull
  private String content;

  public static final String JSON_PROPERTY_REFRESH = "refresh";
  private JsonNullable<StepRefreshInfo> refresh = JsonNullable.<StepRefreshInfo>undefined();

  public IntegrationStep() { 
  }

  public IntegrationStep method(@javax.annotation.Nonnull IntegrationLaunchMethod method) {
    this.method = method;
    return this;
  }

  /**
   * The launch method to perform
   * @return method
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_METHOD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public IntegrationLaunchMethod getMethod() {
    return method;
  }


  @JsonProperty(JSON_PROPERTY_METHOD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMethod(@javax.annotation.Nonnull IntegrationLaunchMethod method) {
    this.method = method;
  }


  public IntegrationStep content(@javax.annotation.Nonnull String content) {
    this.content = content;
    return this;
  }

  /**
   * Step type-specific content related to the step: a URL for &#x60;LaunchBrowser&#x60;, a deeplink for &#x60;DeeplinkToMobile&#x60; or a string to show to the user for &#x60;ShowContent&#x60;.
   * @return content
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CONTENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getContent() {
    return content;
  }


  @JsonProperty(JSON_PROPERTY_CONTENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setContent(@javax.annotation.Nonnull String content) {
    this.content = content;
  }


  public IntegrationStep refresh(@javax.annotation.Nullable StepRefreshInfo refresh) {
    this.refresh = JsonNullable.<StepRefreshInfo>of(refresh);
    return this;
  }

  /**
   * If non-null, contains metadata about how to refresh the value of &#x60;content&#x60;.
   * @return refresh
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public StepRefreshInfo getRefresh() {
        return refresh.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REFRESH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<StepRefreshInfo> getRefresh_JsonNullable() {
    return refresh;
  }
  
  @JsonProperty(JSON_PROPERTY_REFRESH)
  public void setRefresh_JsonNullable(JsonNullable<StepRefreshInfo> refresh) {
    this.refresh = refresh;
  }

  public void setRefresh(@javax.annotation.Nullable StepRefreshInfo refresh) {
    this.refresh = JsonNullable.<StepRefreshInfo>of(refresh);
  }


  /**
   * Return true if this IntegrationStep object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IntegrationStep integrationStep = (IntegrationStep) o;
    return Objects.equals(this.method, integrationStep.method) &&
        Objects.equals(this.content, integrationStep.content) &&
        equalsNullable(this.refresh, integrationStep.refresh);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(method, content, hashCodeNullable(refresh));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IntegrationStep {\n");
    sb.append("    method: ").append(toIndentedString(method)).append("\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    refresh: ").append(toIndentedString(refresh)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `method` to the URL query string
    if (getMethod() != null) {
      joiner.add(String.format("%smethod%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getMethod()))));
    }

    // add `content` to the URL query string
    if (getContent() != null) {
      joiner.add(String.format("%scontent%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getContent()))));
    }

    // add `refresh` to the URL query string
    if (getRefresh() != null) {
      joiner.add(getRefresh().toUrlQueryString(prefix + "refresh" + suffix));
    }

    return joiner.toString();
  }
}

