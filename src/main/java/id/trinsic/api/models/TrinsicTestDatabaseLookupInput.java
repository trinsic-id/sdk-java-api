/*
 * Trinsic API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package id.trinsic.api.models;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import id.trinsic.ApiClient;
/**
 * TrinsicTestDatabaseLookupInput
 */
@JsonPropertyOrder({
  TrinsicTestDatabaseLookupInput.JSON_PROPERTY_GIVEN_NAME,
  TrinsicTestDatabaseLookupInput.JSON_PROPERTY_FAMILY_NAME,
  TrinsicTestDatabaseLookupInput.JSON_PROPERTY_IDENTITY_CODE,
  TrinsicTestDatabaseLookupInput.JSON_PROPERTY_SELFIE_BASE64
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-05-22T03:15:48.156257273Z[Etc/UTC]", comments = "Generator version: 7.13.0")
public class TrinsicTestDatabaseLookupInput {
  public static final String JSON_PROPERTY_GIVEN_NAME = "givenName";
  private JsonNullable<String> givenName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_FAMILY_NAME = "familyName";
  private JsonNullable<String> familyName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IDENTITY_CODE = "identityCode";
  private JsonNullable<String> identityCode = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SELFIE_BASE64 = "selfieBase64";
  private JsonNullable<String> selfieBase64 = JsonNullable.<String>undefined();

  public TrinsicTestDatabaseLookupInput() { 
  }

  public TrinsicTestDatabaseLookupInput givenName(@javax.annotation.Nullable String givenName) {
    this.givenName = JsonNullable.<String>of(givenName);
    return this;
  }

  /**
   * The given name to use for the output of the test Session.              This is required; if not provided, Trinsic&#39;s Fallback UI will be invoked to collect it from the user.              Can be any non-empty value.
   * @return givenName
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getGivenName() {
        return givenName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_GIVEN_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getGivenName_JsonNullable() {
    return givenName;
  }
  
  @JsonProperty(JSON_PROPERTY_GIVEN_NAME)
  public void setGivenName_JsonNullable(JsonNullable<String> givenName) {
    this.givenName = givenName;
  }

  public void setGivenName(@javax.annotation.Nullable String givenName) {
    this.givenName = JsonNullable.<String>of(givenName);
  }


  public TrinsicTestDatabaseLookupInput familyName(@javax.annotation.Nullable String familyName) {
    this.familyName = JsonNullable.<String>of(familyName);
    return this;
  }

  /**
   * The family name to use for the output of the test Session.              This is required; if not provided, Trinsic&#39;s Fallback UI will be invoked to collect it from the user.              Can be any non-empty value.
   * @return familyName
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getFamilyName() {
        return familyName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FAMILY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFamilyName_JsonNullable() {
    return familyName;
  }
  
  @JsonProperty(JSON_PROPERTY_FAMILY_NAME)
  public void setFamilyName_JsonNullable(JsonNullable<String> familyName) {
    this.familyName = familyName;
  }

  public void setFamilyName(@javax.annotation.Nullable String familyName) {
    this.familyName = JsonNullable.<String>of(familyName);
  }


  public TrinsicTestDatabaseLookupInput identityCode(@javax.annotation.Nullable String identityCode) {
    this.identityCode = JsonNullable.<String>of(identityCode);
    return this;
  }

  /**
   * A 6-digit code; must be \&quot;123456\&quot; for the Session to succeed.              This is required; if not provided, Trinsic&#39;s Fallback UI will be invoked to collect it from the user.              Any other value will cause the Session to fail.
   * @return identityCode
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getIdentityCode() {
        return identityCode.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IDENTITY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdentityCode_JsonNullable() {
    return identityCode;
  }
  
  @JsonProperty(JSON_PROPERTY_IDENTITY_CODE)
  public void setIdentityCode_JsonNullable(JsonNullable<String> identityCode) {
    this.identityCode = identityCode;
  }

  public void setIdentityCode(@javax.annotation.Nullable String identityCode) {
    this.identityCode = JsonNullable.<String>of(identityCode);
  }


  public TrinsicTestDatabaseLookupInput selfieBase64(@javax.annotation.Nullable String selfieBase64) {
    this.selfieBase64 = JsonNullable.<String>of(selfieBase64);
    return this;
  }

  /**
   * An optional selfie image, base64-encoded.              Will replace the existing test selfie attachment output if provided.
   * @return selfieBase64
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getSelfieBase64() {
        return selfieBase64.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SELFIE_BASE64)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSelfieBase64_JsonNullable() {
    return selfieBase64;
  }
  
  @JsonProperty(JSON_PROPERTY_SELFIE_BASE64)
  public void setSelfieBase64_JsonNullable(JsonNullable<String> selfieBase64) {
    this.selfieBase64 = selfieBase64;
  }

  public void setSelfieBase64(@javax.annotation.Nullable String selfieBase64) {
    this.selfieBase64 = JsonNullable.<String>of(selfieBase64);
  }


  /**
   * Return true if this TrinsicTestDatabaseLookupInput object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TrinsicTestDatabaseLookupInput trinsicTestDatabaseLookupInput = (TrinsicTestDatabaseLookupInput) o;
    return equalsNullable(this.givenName, trinsicTestDatabaseLookupInput.givenName) &&
        equalsNullable(this.familyName, trinsicTestDatabaseLookupInput.familyName) &&
        equalsNullable(this.identityCode, trinsicTestDatabaseLookupInput.identityCode) &&
        equalsNullable(this.selfieBase64, trinsicTestDatabaseLookupInput.selfieBase64);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(givenName), hashCodeNullable(familyName), hashCodeNullable(identityCode), hashCodeNullable(selfieBase64));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TrinsicTestDatabaseLookupInput {\n");
    sb.append("    givenName: ").append(toIndentedString(givenName)).append("\n");
    sb.append("    familyName: ").append(toIndentedString(familyName)).append("\n");
    sb.append("    identityCode: ").append(toIndentedString(identityCode)).append("\n");
    sb.append("    selfieBase64: ").append(toIndentedString(selfieBase64)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `givenName` to the URL query string
    if (getGivenName() != null) {
      joiner.add(String.format("%sgivenName%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getGivenName()))));
    }

    // add `familyName` to the URL query string
    if (getFamilyName() != null) {
      joiner.add(String.format("%sfamilyName%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getFamilyName()))));
    }

    // add `identityCode` to the URL query string
    if (getIdentityCode() != null) {
      joiner.add(String.format("%sidentityCode%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getIdentityCode()))));
    }

    // add `selfieBase64` to the URL query string
    if (getSelfieBase64() != null) {
      joiner.add(String.format("%sselfieBase64%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getSelfieBase64()))));
    }

    return joiner.toString();
  }
}

