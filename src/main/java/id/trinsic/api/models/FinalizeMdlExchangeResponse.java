/*
 * Trinsic API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package id.trinsic.api.models;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import id.trinsic.api.models.IdentityData;
import id.trinsic.api.models.MdlIdentityData;
import id.trinsic.api.models.Session;
import java.util.Arrays;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import id.trinsic.ApiClient;
/**
 * FinalizeMdlExchangeResponse
 */
@JsonPropertyOrder({
  FinalizeMdlExchangeResponse.JSON_PROPERTY_EXCHANGE_ID,
  FinalizeMdlExchangeResponse.JSON_PROPERTY_CREATED_SESSION,
  FinalizeMdlExchangeResponse.JSON_PROPERTY_MDL_DATA,
  FinalizeMdlExchangeResponse.JSON_PROPERTY_NORMALIZED_IDENTITY_DATA
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-10-02T21:44:25.982348346Z[Etc/UTC]", comments = "Generator version: 7.13.0")
public class FinalizeMdlExchangeResponse {
  public static final String JSON_PROPERTY_EXCHANGE_ID = "exchangeId";
  @javax.annotation.Nonnull
  private UUID exchangeId;

  public static final String JSON_PROPERTY_CREATED_SESSION = "createdSession";
  @javax.annotation.Nonnull
  private Session createdSession;

  public static final String JSON_PROPERTY_MDL_DATA = "mdlData";
  private JsonNullable<MdlIdentityData> mdlData = JsonNullable.<MdlIdentityData>undefined();

  public static final String JSON_PROPERTY_NORMALIZED_IDENTITY_DATA = "normalizedIdentityData";
  private JsonNullable<IdentityData> normalizedIdentityData = JsonNullable.<IdentityData>undefined();

  public FinalizeMdlExchangeResponse() { 
  }

  public FinalizeMdlExchangeResponse exchangeId(@javax.annotation.Nonnull UUID exchangeId) {
    this.exchangeId = exchangeId;
    return this;
  }

  /**
   * The Exchange ID of the mDL exchange which was just finalized.
   * @return exchangeId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EXCHANGE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public UUID getExchangeId() {
    return exchangeId;
  }


  @JsonProperty(JSON_PROPERTY_EXCHANGE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExchangeId(@javax.annotation.Nonnull UUID exchangeId) {
    this.exchangeId = exchangeId;
  }


  public FinalizeMdlExchangeResponse createdSession(@javax.annotation.Nonnull Session createdSession) {
    this.createdSession = createdSession;
    return this;
  }

  /**
   * The AcceptanceSession which was created as a result of finalizing this mDL exchange.
   * @return createdSession
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_SESSION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Session getCreatedSession() {
    return createdSession;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_SESSION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedSession(@javax.annotation.Nonnull Session createdSession) {
    this.createdSession = createdSession;
  }


  public FinalizeMdlExchangeResponse mdlData(@javax.annotation.Nullable MdlIdentityData mdlData) {
    this.mdlData = JsonNullable.<MdlIdentityData>of(mdlData);
    return this;
  }

  /**
   * The identity data from the mDL exchange, in a semi-normalized format.              Supports all possible fields and namespaces, but does not map them to Trinsic&#39;s common data model.
   * @return mdlData
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public MdlIdentityData getMdlData() {
        return mdlData.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MDL_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<MdlIdentityData> getMdlData_JsonNullable() {
    return mdlData;
  }
  
  @JsonProperty(JSON_PROPERTY_MDL_DATA)
  public void setMdlData_JsonNullable(JsonNullable<MdlIdentityData> mdlData) {
    this.mdlData = mdlData;
  }

  public void setMdlData(@javax.annotation.Nullable MdlIdentityData mdlData) {
    this.mdlData = JsonNullable.<MdlIdentityData>of(mdlData);
  }


  public FinalizeMdlExchangeResponse normalizedIdentityData(@javax.annotation.Nullable IdentityData normalizedIdentityData) {
    this.normalizedIdentityData = JsonNullable.<IdentityData>of(normalizedIdentityData);
    return this;
  }

  /**
   * The identity data from the mDL exchange, normalized into Trinsic&#39;s common data model.
   * @return normalizedIdentityData
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public IdentityData getNormalizedIdentityData() {
        return normalizedIdentityData.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NORMALIZED_IDENTITY_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<IdentityData> getNormalizedIdentityData_JsonNullable() {
    return normalizedIdentityData;
  }
  
  @JsonProperty(JSON_PROPERTY_NORMALIZED_IDENTITY_DATA)
  public void setNormalizedIdentityData_JsonNullable(JsonNullable<IdentityData> normalizedIdentityData) {
    this.normalizedIdentityData = normalizedIdentityData;
  }

  public void setNormalizedIdentityData(@javax.annotation.Nullable IdentityData normalizedIdentityData) {
    this.normalizedIdentityData = JsonNullable.<IdentityData>of(normalizedIdentityData);
  }


  /**
   * Return true if this FinalizeMdlExchangeResponse object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FinalizeMdlExchangeResponse finalizeMdlExchangeResponse = (FinalizeMdlExchangeResponse) o;
    return Objects.equals(this.exchangeId, finalizeMdlExchangeResponse.exchangeId) &&
        Objects.equals(this.createdSession, finalizeMdlExchangeResponse.createdSession) &&
        equalsNullable(this.mdlData, finalizeMdlExchangeResponse.mdlData) &&
        equalsNullable(this.normalizedIdentityData, finalizeMdlExchangeResponse.normalizedIdentityData);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(exchangeId, createdSession, hashCodeNullable(mdlData), hashCodeNullable(normalizedIdentityData));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FinalizeMdlExchangeResponse {\n");
    sb.append("    exchangeId: ").append(toIndentedString(exchangeId)).append("\n");
    sb.append("    createdSession: ").append(toIndentedString(createdSession)).append("\n");
    sb.append("    mdlData: ").append(toIndentedString(mdlData)).append("\n");
    sb.append("    normalizedIdentityData: ").append(toIndentedString(normalizedIdentityData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `exchangeId` to the URL query string
    if (getExchangeId() != null) {
      joiner.add(String.format("%sexchangeId%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getExchangeId()))));
    }

    // add `createdSession` to the URL query string
    if (getCreatedSession() != null) {
      joiner.add(getCreatedSession().toUrlQueryString(prefix + "createdSession" + suffix));
    }

    // add `mdlData` to the URL query string
    if (getMdlData() != null) {
      joiner.add(getMdlData().toUrlQueryString(prefix + "mdlData" + suffix));
    }

    // add `normalizedIdentityData` to the URL query string
    if (getNormalizedIdentityData() != null) {
      joiner.add(getNormalizedIdentityData().toUrlQueryString(prefix + "normalizedIdentityData" + suffix));
    }

    return joiner.toString();
  }
}

