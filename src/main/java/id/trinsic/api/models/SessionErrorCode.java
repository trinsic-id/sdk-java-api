/*
 * Trinsic API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package id.trinsic.api.models;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * Gets or Sets SessionErrorCode
 */
public enum SessionErrorCode {
  
  INTERNAL("Internal"),
  
  OTHER("Other"),
  
  CANCELED("Canceled"),
  
  USER_ABANDONED("UserAbandoned"),
  
  USER_TIMED_OUT("UserTimedOut"),
  
  EXPIRED("Expired"),
  
  INVALID_IMAGE("InvalidImage"),
  
  INAUTHENTIC("Inauthentic"),
  
  UNSUPPORTED_DOCUMENT("UnsupportedDocument"),
  
  ASSURANCE_LEVEL_NOT_MET("AssuranceLevelNotMet"),
  
  SECURITY_VALIDATION_FAILED("SecurityValidationFailed"),
  
  INVALID_RESPONSE("InvalidResponse");

  private String value;

  SessionErrorCode(String value) {
    this.value = value;
  }

  @JsonValue
  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  @JsonCreator
  public static SessionErrorCode fromValue(String value) {
    for (SessionErrorCode b : SessionErrorCode.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    if (prefix == null) {
      prefix = "";
    }

    return String.format("%s=%s", prefix, this.toString());
  }

}

