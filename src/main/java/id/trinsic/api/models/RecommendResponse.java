/*
 * Trinsic API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package id.trinsic.api.models;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import id.trinsic.api.models.ProviderInformation;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import id.trinsic.ApiClient;
/**
 * RecommendResponse
 */
@JsonPropertyOrder({
  RecommendResponse.JSON_PROPERTY_RECOGNIZED,
  RecommendResponse.JSON_PROPERTY_RELEVANT,
  RecommendResponse.JSON_PROPERTY_REMAINDER
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-05-06T18:08:41.863161290Z[Etc/UTC]", comments = "Generator version: 7.13.0")
public class RecommendResponse {
  public static final String JSON_PROPERTY_RECOGNIZED = "recognized";
  @javax.annotation.Nonnull
  private List<ProviderInformation> recognized = new ArrayList<>();

  public static final String JSON_PROPERTY_RELEVANT = "relevant";
  @javax.annotation.Nonnull
  private List<ProviderInformation> relevant = new ArrayList<>();

  public static final String JSON_PROPERTY_REMAINDER = "remainder";
  @javax.annotation.Nonnull
  private List<ProviderInformation> remainder = new ArrayList<>();

  public RecommendResponse() { 
  }

  public RecommendResponse recognized(@javax.annotation.Nonnull List<ProviderInformation> recognized) {
    this.recognized = recognized;
    return this;
  }

  public RecommendResponse addRecognizedItem(ProviderInformation recognizedItem) {
    if (this.recognized == null) {
      this.recognized = new ArrayList<>();
    }
    this.recognized.add(recognizedItem);
    return this;
  }

  /**
   * The list of providers that were recognized in Trinsic&#39;s network. These are providers that already verified this user
   * @return recognized
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_RECOGNIZED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public List<ProviderInformation> getRecognized() {
    return recognized;
  }


  @JsonProperty(JSON_PROPERTY_RECOGNIZED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRecognized(@javax.annotation.Nonnull List<ProviderInformation> recognized) {
    this.recognized = recognized;
  }


  public RecommendResponse relevant(@javax.annotation.Nonnull List<ProviderInformation> relevant) {
    this.relevant = relevant;
    return this;
  }

  public RecommendResponse addRelevantItem(ProviderInformation relevantItem) {
    if (this.relevant == null) {
      this.relevant = new ArrayList<>();
    }
    this.relevant.add(relevantItem);
    return this;
  }

  /**
   * The list of providers that although not recognized, are relevant to the user&#39;s identity. The user may have been verified by these providers
   * @return relevant
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_RELEVANT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public List<ProviderInformation> getRelevant() {
    return relevant;
  }


  @JsonProperty(JSON_PROPERTY_RELEVANT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRelevant(@javax.annotation.Nonnull List<ProviderInformation> relevant) {
    this.relevant = relevant;
  }


  public RecommendResponse remainder(@javax.annotation.Nonnull List<ProviderInformation> remainder) {
    this.remainder = remainder;
    return this;
  }

  public RecommendResponse addRemainderItem(ProviderInformation remainderItem) {
    if (this.remainder == null) {
      this.remainder = new ArrayList<>();
    }
    this.remainder.add(remainderItem);
    return this;
  }

  /**
   * The list of providers that are not recognized and are not relevant to the user&#39;s identity
   * @return remainder
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_REMAINDER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public List<ProviderInformation> getRemainder() {
    return remainder;
  }


  @JsonProperty(JSON_PROPERTY_REMAINDER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRemainder(@javax.annotation.Nonnull List<ProviderInformation> remainder) {
    this.remainder = remainder;
  }


  /**
   * Return true if this RecommendResponse object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RecommendResponse recommendResponse = (RecommendResponse) o;
    return Objects.equals(this.recognized, recommendResponse.recognized) &&
        Objects.equals(this.relevant, recommendResponse.relevant) &&
        Objects.equals(this.remainder, recommendResponse.remainder);
  }

  @Override
  public int hashCode() {
    return Objects.hash(recognized, relevant, remainder);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RecommendResponse {\n");
    sb.append("    recognized: ").append(toIndentedString(recognized)).append("\n");
    sb.append("    relevant: ").append(toIndentedString(relevant)).append("\n");
    sb.append("    remainder: ").append(toIndentedString(remainder)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `recognized` to the URL query string
    if (getRecognized() != null) {
      for (int i = 0; i < getRecognized().size(); i++) {
        if (getRecognized().get(i) != null) {
          joiner.add(getRecognized().get(i).toUrlQueryString(String.format("%srecognized%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `relevant` to the URL query string
    if (getRelevant() != null) {
      for (int i = 0; i < getRelevant().size(); i++) {
        if (getRelevant().get(i) != null) {
          joiner.add(getRelevant().get(i).toUrlQueryString(String.format("%srelevant%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `remainder` to the URL query string
    if (getRemainder() != null) {
      for (int i = 0; i < getRemainder().size(); i++) {
        if (getRemainder().get(i) != null) {
          joiner.add(getRemainder().get(i).toUrlQueryString(String.format("%sremainder%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    return joiner.toString();
  }
}

